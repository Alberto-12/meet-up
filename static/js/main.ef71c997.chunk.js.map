{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","className","this","props","event","summary","start","dateTime","location","Component","EventList","events","map","id","CitySearch","state","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","onClick","NumberOfEvents","numOfEvents","setNumberOfEvents","e","mockData","removeQuery","window","history","pushState","pathname","newurl","protocol","host","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ef71c997.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  render() {\n    return <div>\n        <h2 className = \"title\">\n            {this.props.event.summary}\n        </h2>\n  <div className = \"time\">{this.props.event.start.dateTime}</div>\n        <div className = \"location\">{this.props.event.location}</div>\n        <button className = \"details\">view details</button>\n    </div>;\n  }\n}\nexport default Event;","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from \"react\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: undefined\n  };\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}\n          >{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n    state = {\n        numOfEvents: 32 ,\n    }\n    setNumberOfEvents = (e) => {\n        this.setState({ \n            numOfEvents: e.target.value\n          });\n        }\n  render() {\n    return (\n      <div className = \"NumberOfEvents\">\n          <input\n          type = \"number\"\n          className = \"numberEvents\"\n          value = {this.state.numOfEvents} \n          onChange = {this.setNumberOfEvents}\n          />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"organizer\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"start\": {\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n         \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n         \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n       }, \n\n       {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"organizer\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"start\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n         \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n         \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n       },\n       {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"organizer\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"start\": {\n         \"dateTime\": \"2020-05-21T16:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n         \"dateTime\": \"2020-05-21T17:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n         \"dateTime\": \"2020-05-21T16:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n         \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n       }\n    ];\n\n    export { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n  };\n\n  const checkToken = async (accessToken) => {\n    const result = await fetch(\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n      .then((res) => res.json())\n      .catch((error) => error.json());\n  \n    return result;\n  };  \n\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n   }\n\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://2jh3nzj7pc.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\n  \n  export const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://2jh3nzj7pc.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n\n  };\n\n  const getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n      'https://2jh3nzj7pc.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .catch((error) => error);\n  \n    access_token && localStorage.setItem(\"access_token\", access_token);\n  \n    return access_token;\n  };\n   ","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations  } from './api';\nimport './nprogress.css';\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ? events: events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NumberOfEvents/>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}